# Importando bibliotecas que seriam √∫teis no futuro
# A biblioteca 'time' nos permite fazer pausas no programa
import time

# --- ETAPA DE SIMULA√á√ÉO (Imagine que estas fun√ß√µes conversam com as pe√ßas reais) ---


def capturar_imagem():
    """
    Fun√ß√£o de mentirinha que simula a c√¢mera tirando uma foto.
    Em um projeto real, aqui estaria o c√≥digo para controlar a c√¢mera.
    """
    print("üì∏ C√¢mera ativada... Capturando imagem do objeto.")
    # Vamos retornar o nome de um arquivo de imagem de exemplo
    return "imagem_do_lixo.jpg"


def analisar_imagem_com_ia(caminho_da_imagem):
    """
    Fun√ß√£o de mentirinha que simula a an√°lise pela IA (Gemini).
    Ela recebe o nome da imagem e "adivinha" o que √©.
    """
    print(f"üß† Enviando '{caminho_da_imagem}' para an√°lise da IA...")
    time.sleep(2)  # Simula o tempo de an√°lise

    # Para nosso teste, vamos retornar um tipo de lixo aleat√≥rio.
    # Em um projeto real, aqui voc√™ faria a chamada para a API do Gemini.
    # Exemplo de poss√≠veis respostas da IA:
    tipos_de_lixo = [
        "casca de banana",
        "garrafa pet",
        "lata de refrigerante",
        "folha de papel",
        "caco de vidro",
    ]
    import random

    return random.choice(tipos_de_lixo)


def mover_plataforma(posicao):
    """
    Fun√ß√£o de mentirinha que simula o movimento do motor.
    """
    print(f"üí™ Movendo plataformas para a posi√ß√£o: '{posicao}'...")
    time.sleep(1)  # Simula o tempo de movimento
    print(f"‚úÖ Lixo destinado para '{posicao}'. Plataformas na posi√ß√£o inicial.")


# --- O ALGORITMO PRINCIPAL (O C√©rebro do Projeto) ---

print("--- Lixeira Inteligente v1.0 - Iniciando ---")

# Este loop 'while True' faz o programa rodar para sempre, esperando por lixo.
while True:
    # 1. Espera - Vamos simular a detec√ß√£o de um lixo novo a cada 5 segundos
    print("\n-------------------------------------------------")
    print("Aguardando novo item... (Pressione Ctrl+C para sair)")
    time.sleep(5)

    # 2. Captura a Imagem
    imagem_capturada = capturar_imagem()

    # 3. Analisa com a IA
    resultado_ia = analisar_imagem_com_ia(imagem_capturada)
    print(f"üîç A IA identificou o objeto como: '{resultado_ia}'")

    # 4. Classifica o Resultado
    if "casca" in resultado_ia or "resto de comida" in resultado_ia:
        categoria = "Org√¢nico"
    elif "papel" in resultado_ia or "pet" in resultado_ia or "pl√°stico" in resultado_ia:
        categoria = "Papel e Pl√°stico"
    elif "lata" in resultado_ia or "metal" in resultado_ia or "vidro" in resultado_ia:
        categoria = "Metal e Vidro"
    else:
        categoria = "N√£o Identificado"  # Uma categoria para erros

    print(f"üè∑Ô∏è Classificado na categoria: '{categoria}'")

    # 5. Age (Move as Plataformas)
    if categoria != "N√£o Identificado":
        mover_plataforma(categoria)
    else:
        print("‚ùå N√£o foi poss√≠vel identificar o lixo. Descarte manual necess√°rio.")
